// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220911124304_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Entities.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(252)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<int>("PermissionOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9381),
                            Description = "",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9392),
                            PermissionCode = "USER",
                            PermissionName = "USER",
                            PermissionOrder = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = "2",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9394),
                            Description = "",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9394),
                            PermissionCode = "USER-DELETE",
                            PermissionName = "USER-DELETE",
                            PermissionOrder = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = "3",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9396),
                            Description = "",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9396),
                            PermissionCode = "USER-UPDATE",
                            PermissionName = "USER-UPDATE",
                            PermissionOrder = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = "4",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9397),
                            Description = "",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9397),
                            PermissionCode = "USER-ADD",
                            PermissionName = "USER-ADD",
                            PermissionOrder = 2,
                            Status = 0
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(252)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "gafsakfi-efhjsk-fshdbe-334jsfgs-486h",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9516),
                            Description = "",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9517),
                            RoleName = "Admin",
                            Status = 0
                        },
                        new
                        {
                            Id = "1f6e351a-e9e0-43a4-8706-4626f3813977",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9553),
                            Description = "",
                            ModifiedBy = "",
                            ModifiedOn = new DateTime(2022, 9, 11, 19, 43, 4, 658, DateTimeKind.Local).AddTicks(9553),
                            RoleName = "UserViewer",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RolePermission", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(252)");

                    b.Property<string>("PermissionId")
                        .HasColumnType("varchar(252)");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = "gafsakfi-efhjsk-fshdbe-334jsfgs-486h",
                            PermissionId = "1"
                        },
                        new
                        {
                            RoleId = "gafsakfi-efhjsk-fshdbe-334jsfgs-486h",
                            PermissionId = "2"
                        },
                        new
                        {
                            RoleId = "gafsakfi-efhjsk-fshdbe-334jsfgs-486h",
                            PermissionId = "3"
                        },
                        new
                        {
                            RoleId = "gafsakfi-efhjsk-fshdbe-334jsfgs-486h",
                            PermissionId = "4"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(252)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(252)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "dhgfd55-4234jdf-efhjsk-fshdbe-334jsfgs-486sdh",
                            Address = "",
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Email = "CMCglobal_AGOS@gmail.com",
                            FullName = "Admin",
                            Gender = 0,
                            ModifiedBy = "",
                            Password = "Admin",
                            Phone = "",
                            Status = 0,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = "0a938ba1-b17d-477d-b4ae-53e30c928d52",
                            Address = "",
                            CreatedBy = "",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Email = "CMCglobal_AGOS@gmail.com",
                            FullName = "Viewer",
                            Gender = 0,
                            ModifiedBy = "",
                            Password = "Viewer",
                            Phone = "",
                            Status = 0,
                            UserName = "Viewer"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.UserRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(252)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(252)");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = "gafsakfi-efhjsk-fshdbe-334jsfgs-486h",
                            UserId = "dhgfd55-4234jdf-efhjsk-fshdbe-334jsfgs-486sdh"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RolePermission", b =>
                {
                    b.HasOne("DataAccess.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataAccess.Entities.UserRole", b =>
                {
                    b.HasOne("DataAccess.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entities.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("DataAccess.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
